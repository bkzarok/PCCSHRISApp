@model HRISApplication.Models.PersonalDetail

@{
    ViewData["Title"] = "Details";
}



<div class="d-flex flex-row justify-content-center text-center">
    <img src="~/SSPDF Flag.png" class="img-responsive img-round" style="margin-inline-end:50px; max-height:100px; max-width: 100px;" />
    <h1 class="text-xxl-center" style="color:darkgreen">SOUTH SUDAN PEOPLES' DEFENCE FORCES</h1>

</div>


<div class="row justify-content-center text-center"  style="margin-top:50px;">
            
    <div class="col-md">
        <h4>PersonalDetail</h4>
        <hr />

        <div>
            <img class="img-responsive img-round" src="data:image/jpeg;base64,@Convert.ToBase64String(Model.ProfilePicture)" style="max-height:200px; max-width: 200px;" />
        </div>
        <div class="text-nowrap">
            <b>
                @Html.DisplayNameFor(model => model.SoldierRank)
            </b>
            @Html.DisplayFor(model => model.SoldierRank)
        </div>

        <div class="text-nowrap"> 
            <b>@Html.DisplayNameFor(model => model.FirstName) </b>
            @Html.DisplayFor(model => model.FirstName)
        </div>
            <div class="text-nowrap"> 
            <b>@Html.DisplayNameFor(model => model.MiddleName) </b>
            @Html.DisplayFor(model => model.MiddleName)
        </div>

            <div class="text-nowrap"> 
            <b>@Html.DisplayNameFor(model => model.LastName) </b>
            @Html.DisplayFor(model => model.LastName)
        </div>

            <div class="text-nowrap"> 
            <b>@Html.DisplayNameFor(model => model.DateOfBirth) </b>
            @Html.DisplayFor(model => model.DateOfBirth)
        </div>

            <div class="text-nowrap"> 
            <b>@Html.DisplayNameFor(model => model.BloodGroup) </b>
            @Html.DisplayFor(model => model.BloodGroup)
        </div>
        <div class="text-nowrap">
            <b>@Html.DisplayNameFor(model => model.Ethnicity) </b>
            @Html.DisplayFor(model => model.Ethnicity)
        </div>
        <div class="text-nowrap">
            <b>@Html.DisplayNameFor(model => model.ShieldNo) </b>
            @Html.DisplayFor(model => model.ShieldNo)
        </div>
            
        <div class="text-nowrap">
            <b>@Html.DisplayNameFor(model => model.Gender) </b>

            @if (Model.Gender)
            {

                @:Male
            }
            else
            {
                @:Female
            }
        </div>

        <div class="text-nowrap">
            <b>@Html.DisplayNameFor(model => model.MaritalStatus) </b>
            @Html.DisplayFor(model => model.MaritalStatus)
        </div>
    </div>               
  

    @foreach (var Address in Model.Address)
    {
        <div class="col-md">

            <h4> @Html.DisplayNameFor(model => model.Address)</h4>
            <hr />
            <div class="text-nowrap">
                <b>@Html.DisplayNameFor(AddressItem => Address.Country ) </b>
                @Html.DisplayFor(AddressItem => Address.Country)
            </div>

            <div class="text-nowrap">
                <b>@Html.DisplayNameFor(AddressItem => Address.State) </b>
                @Html.DisplayFor(AddressItem => Address.State)
            </div>

                <div class="text-nowrap">
                <b>@Html.DisplayNameFor(AddressItem => Address.Counuty ) </b>
                @Html.DisplayFor(AddressItem => Address.Counuty)
            </div>

                <div class="text-nowrap">
                <b>@Html.DisplayNameFor(AddressItem => Address.Payam ) </b>
                @Html.DisplayFor(AddressItem => Address.Payam)
            </div>

            <div class="text-nowrap">
                <b>@Html.DisplayNameFor(AddressItem => Address.Boma) </b>
                @Html.DisplayFor(AddressItem => Address.Boma)
            </div>              
        </div>

    }
       
    <div class="col-md">
        <h4> @Html.DisplayNameFor(model => model.Children)</h4>
        <hr />
        <div class="table-responsive">
            <table class="table">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.Children.FirstOrDefault().Name)
                        </th>

                        <th>
                            @Html.DisplayNameFor(model => model.Children.FirstOrDefault().DateOfBirth)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Children.FirstOrDefault().Occupation)
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var child in Model.Children)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(childItem => child.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(childItem => child.DateOfBirth)
                            </td>
                            <td>
                                @Html.DisplayFor(childItem => child.Occupation)
                            </td>
                        </tr>

                    }
                </tbody>
            </table>
        </div>
    </div>
 
    <div class="col-md">
        <h4> @Html.DisplayNameFor(model => model.Schools)</h4>
        <hr />
        <div class="table-responsive">
            <table class="table">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.Schools.FirstOrDefault().SchoolLevel)
                        </th>

                        <th>
                            @Html.DisplayNameFor(model => model.Schools.FirstOrDefault().Name)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Schools.FirstOrDefault().Place)
                        </th>

                        <th>
                            @Html.DisplayNameFor(model => model.Schools.FirstOrDefault().PeriodFrom)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Schools.FirstOrDefault().PeriodTo)
                        </th>

                        <th>
                            @Html.DisplayNameFor(model => model.Schools.FirstOrDefault().FieldOfTraining)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Schools.FirstOrDefault().CertificateAcquired)
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach(var school in Model.Schools)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(schoolItem => school.SchoolLevel)
                            </td>
                            <td>
                                @Html.DisplayFor(schoolItem => school.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(schoolItem => school.Place)
                            </td>
                            <td>
                                @Html.DisplayFor(schoolItem => school.PeriodFrom)
                            </td>
                            <td>
                                @Html.DisplayFor(schoolItem => school.PeriodTo)
                            </td>
                            <td>
                                @Html.DisplayFor(schoolItem => school.FieldOfTraining)
                            </td>
                            <td>
                                @Html.DisplayFor(schoolItem => school.CertificateAcquired)
                            </td>
                        </tr>
                    
                    }
                </tbody>
            </table>
        </div>    
    </div>

    <div class="col-md">
        <h4> @Html.DisplayNameFor(model => model.Languages)</h4>
        <hr />
        <div class="table-responsive">
            <table class="table">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.Languages.FirstOrDefault().Type)
                        </th>

                        <th>
                            @Html.DisplayNameFor(model => model.Languages.FirstOrDefault().Name)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Languages.FirstOrDefault().FluencyLevel)
                        </th>                                       
                    </tr>
                </thead>
                <tbody>
                    @foreach (var language in Model.Languages)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(languageItem => language.Type)
                            </td>
                            <td>
                                @Html.DisplayFor(languageItem => language.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(languageItem => language.FluencyLevel)
                            </td>                        
                        </tr>

                    }
                </tbody>
            </table>
        </div>
    </div>
            
    <div class="col-md">
            <h4> @Html.DisplayNameFor(model => model.Parents)</h4>
            <hr />
            <div class="table-responsive">
            <table class="table">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.Parents.FirstOrDefault().Parent1)
                        </th>

                        <th>
                            @Html.DisplayNameFor(model => model.Parents.FirstOrDefault().Name)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Parents.FirstOrDefault().Occupation)
                        </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Parents.FirstOrDefault().Dependency)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Parents.FirstOrDefault().HelpProvided)
                            </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var parent in Model.Parents)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(parentItem => parent.Parent1)
                            </td>
                            <td>
                                    @Html.DisplayFor(parentItem => parent.Name)
                            </td>
                            <td>
                                    @Html.DisplayFor(parentItem => parent.Occupation)
                            </td>
                                <td>
                                    @Html.DisplayFor(parentItem => parent.Dependency)
                                </td>
                                <td>
                                    @Html.DisplayFor(parentItem => parent.HelpProvided)
                                </td>
                        </tr>

                    }
                </tbody>
            </table>
        </div>
        </div>

    <div class="col-md">
            <h4> @Html.DisplayNameFor(model => model.Spouses)</h4>
            <hr />  
            <div class="table-responsive">
                <table class="table">
                    <thead>
                        <tr>
                            <th>
                            @Html.DisplayNameFor(model => model.Spouses.FirstOrDefault().Id)
                            </th>
                            <th>
                            @Html.DisplayNameFor(model => model.Spouses.FirstOrDefault().Name)
                            </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Spouses.FirstOrDefault().Type)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Spouses.FirstOrDefault().State)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Spouses.FirstOrDefault().County)
                            </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Spouses.FirstOrDefault().Occupation)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Spouses.FirstOrDefault().TelephoneNo)
                        </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var spouse in Model.Spouses)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(spouseItem => spouse.Id)
                            </td>
                            <td>
                                @Html.DisplayFor(spouseItem => spouse.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(spouseItem => spouse.Type)
                            </td>
                            <td>
                                @Html.DisplayFor(spouseItem => spouse.State)
                            </td>
                            <td>
                                @Html.DisplayFor(spouseItem => spouse.County)
                            </td>
                            <td>
                                @Html.DisplayFor(spouseItem => spouse.Occupation)
                            </td>
                            <td>
                                @Html.DisplayFor(spouseItem => spouse.TelephoneNo)
                            </td>
                        </tr>
                    }
                </tbody>
                </table>
            </div>
        </div>
 
    <div class="col-md">
        <h4>@Html.DisplayNameFor(model => model.NextOfKins)</h4>
        <hr/>
        <div class="table-responsive">
            <table class="table">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.NextOfKins.FirstOrDefault().Name)
                        </th>
                        <th>@Html.DisplayNameFor(model => model.NextOfKins.FirstOrDefault().Occupation)
                        </th>
                        <th>@Html.DisplayNameFor(model => model.NextOfKins.FirstOrDefault().TelephoneNo)
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var nextOfKin in Model.NextOfKins)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(nextOfKinItem => nextOfKin.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(nextOfKinItem => nextOfKin.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(nextOfKinItem => nextOfKin.Name)
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        </div>

    <div class="col-md">
           <h4>@Html.DisplayNameFor(model => model.Imprisonments)</h4>
           <hr/>
           <div class="table-responsive">
               <table class="table">
                   <thead>
                       <tr>
                           <th>
                               @Html.DisplayNameFor(model => model.Imprisonments.FirstOrDefault().Imprisoned)
                           </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Imprisonments.FirstOrDefault().Place)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Imprisonments.FirstOrDefault().ForHowLong)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Imprisonments.FirstOrDefault().Conviction)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Imprisonments.FirstOrDefault().ExplainTheReason)
                        </th>
                       </tr>
                   </thead>
                   <tbody>
                       @foreach (var imprisontment in Model.Imprisonments)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(imprisonmentItem => imprisontment.Imprisoned)
                            </td>
                            <td>
                                @Html.DisplayFor(imprisontmentItem => imprisontment.Place)
                            </td>
                            <td>
                                @Html.DisplayFor(imprisontmentItem => imprisontment.ForHowLong)
                            </td>
                             <td>
                                @Html.DisplayFor(imprisontmentItem => imprisontment.Conviction)
                            </td>
                            <td>
                                @Html.DisplayFor(imprisontmentItem => imprisontment.ExplainTheReason)
                            </td>
                        </tr>
                    }
                </tbody>
               </table>
           </div>
       </div>

      
    

        @* <div>
        <h4> @Html.DisplayNameFor(model => model.Enrollments)</h4>
        <hr />
        @foreach (var enrollment in Model.Enrollments)
        {
        <div>
        <dl class="row">
        <dt class="col-sm-2">
        @Html.DisplayNameFor(enrollmentItem => enrollment.DateOfEnrollment)
        </dt>
        <dd class="col-sm-10">
        @Html.DisplayFor(enrollmentItem => enrollment.DateOfEnrollment)
        </dd>
        <dt class="col-sm-2">
        @Html.DisplayNameFor(enrollmentItem => enrollment.PlaceOfEnrollment)
        </dt>
        <dd class="col-sm-10">
        @Html.DisplayFor(enrollmentItem => enrollment.PlaceOfEnrollment)
        </dd>
        <dt class="col-sm-2">
        @Html.DisplayNameFor(enrollmentItem => enrollment.ServiceOutsideSspdf)
        </dt>
        <dd class="col-sm-10">
        @Html.DisplayFor(enrollmentItem => enrollment.ServiceOutsideSspdf)
        </dd>
        <dt class="col-sm-2">
        @Html.DisplayNameFor(enrollmentItem => enrollment.PeriodFrom)
        </dt>
        <dd class="col-sm-10">
        @Html.DisplayFor(enrollmentItem => enrollment.PeriodFrom)
        </dd>
        <dt class="col-sm-2">
        @Html.DisplayNameFor(enrollmentItem => enrollment.PeriodTo)
        </dt>
        <dd class="col-sm-10">
        @Html.DisplayFor(enrollmentItem => enrollment.PeriodTo)
        </dd>


        </dl>
        </div>
        }
        </div> *@

       <div class="col-md">
        <h4> @Html.DisplayNameFor(model => model.Training)</h4>
        <hr />
       
        <div class="table-reponsive">
        <table class="table">
            <thead>
                <tr>
                    <th>
                            @Html.DisplayNameFor(trainingItem => trainingItem.Training.FirstOrDefault().TrainingType)
                    </th>

                    <th>
                            @Html.DisplayNameFor(trainingItem => trainingItem.Training.FirstOrDefault().TrainingCenter)
                    </th>
                    <th>
                            @Html.DisplayNameFor(trainingItem => trainingItem.Training.FirstOrDefault().Place)
                    </th>
                        <th>
                            @Html.DisplayNameFor(trainingItem => trainingItem.Training.FirstOrDefault().PeriodFrom)
                        </th>
                        <th>
                            @Html.DisplayNameFor(trainingItem => trainingItem.Training.FirstOrDefault().PeriodTo)
                        </th>
                </tr>
            </thead>        
       
      <tbody>
                @foreach (var training in Model.Training)
                {
                    <tr>
                        <td>
                            @Html.DisplayNameFor(trainingItem => training.TrainingType)
                        </td>
                        <td>
                            @Html.DisplayNameFor(trainingItem => training.TrainingCenter)
                        </td>
                        <td>
                            @Html.DisplayNameFor(trainingItem => training.Place)
                        </td>
                        <td>
                            @Html.DisplayNameFor(trainingItem => training.PeriodFrom)
                        </td>
                        <td>
                            @Html.DisplayNameFor(trainingItem => training.PeriodTo)
                        </td>
                    </tr>
                }
            </tbody>
            </table>
      </div>
        </div>

       @*  <div>
        <h4> @Html.DisplayNameFor(model => model.Assignments)</h4>
        <hr />
        @foreach (var assignment in Model.Assignments)
        {
        <div>
        <dl class="row">
        <dt class="col-sm-2">
        @Html.DisplayNameFor(assignmentItem => assignment.Unit)
        </dt>
        <dd class="col-sm-10">
        @Html.DisplayFor(assignmentItem => assignment.Unit)
        </dd>
        <dt class="col-sm-2">
        @Html.DisplayNameFor(assignmentItem => assignment.PeriodFrom)
        </dt>
        <dd class="col-sm-10">
        @Html.DisplayFor(assignmentItem => assignment.PeriodFrom)
        </dd>
        <dt class="col-sm-2">
        @Html.DisplayNameFor(assignmentItem => assignment.PeriodTo)
        </dt>
        <dd class="col-sm-10">
        @Html.DisplayFor(assignmentItem => assignment.PeriodTo)
        </dd>
        <dt class="col-sm-2">
        @Html.DisplayNameFor(assignmentItem => assignment.PositionHeld)
        </dt>
        <dd class="col-sm-10">
        @Html.DisplayFor(assignmentItem => assignment.PositionHeld)
        </dd>

        </dl>
        </div>
        }
        </div>

        <div>
        <h4> @Html.DisplayNameFor(model => model.Battles)</h4>
        <hr />
        @foreach (var battle in Model.Battles)
        {
        <div>
        <dl class="row">
        <dt class="col-sm-2">
        @Html.DisplayNameFor(battleItem => battle.DateOfBattle)
        </dt>
        <dd class="col-sm-10">
        @Html.DisplayFor(battleItem => battle.DateOfBattle)
        </dd>
        <dt class="col-sm-2">
        @Html.DisplayNameFor(battleItem => battle.PlaceOfBattle)
        </dt>
        <dd class="col-sm-10">
        @Html.DisplayFor(battleItem => battle.PlaceOfBattle)
        </dd>
        <dt class="col-sm-2">
        @Html.DisplayNameFor(battleItem => battle.InjurySustained)
        </dt>
        <dd class="col-sm-10">
        @Html.DisplayFor(battleItem => battle.InjurySustained)
        </dd>
        <dt class="col-sm-2">
        @Html.DisplayNameFor(battleItem => battle.TypeOfInjury)
        </dt>
        <dd class="col-sm-10">
        @Html.DisplayFor(battleItem => battle.TypeOfInjury)
        </dd>

        </dl>
        </div>
        }
        </div> *@

       @*  <div>
        <h4> @Html.DisplayNameFor(model => model.Promotions)</h4>
        <hr />
        <div class="table-responsive">
        <table class="table">
        <thead>
        <tr>
        <th>
        @Html.DisplayNameFor(model => model.Promotions.FirstOrDefault().SoldierRank)
        </th>

        <th>
        @Html.DisplayNameFor(model => model.Promotions.FirstOrDefault().DateOfPromotion)
        </th>
        </tr>
        </thead>
        <tbody>
        @foreach (var promotion in Model.Promotions)
        {
        <tr>
        <td>
        @Html.DisplayFor(promotionItem => promotion.SoldierRank)
        </td>
        <td>
        @Html.DisplayFor(promotionItem => promotion.DateOfPromotion)
        </td>
        </tr>

        }
        </tbody>
        </table>
        </div>
        </div>

        <div>
        <h4> @Html.DisplayNameFor(model => model.HealthConditions)</h4>
        <hr />
        @foreach (var healthCondition in Model.HealthConditions)
        {
        <div>
        <dl class="row">
        <dt class="col-sm-2">
        @Html.DisplayNameFor(healthConditionItem => healthCondition.HaveAhealthCondition)
        </dt>
        <dd class="col-sm-10">
        @Html.DisplayFor(healthConditionItem => healthCondition.HaveAhealthCondition)
        </dd>
        <dt class="col-sm-2">
        @Html.DisplayNameFor(healthConditionItem => healthCondition.IfYesExplain)
        </dt>
        <dd class="col-sm-10">
        @Html.DisplayFor(healthConditionItem => healthCondition.IfYesExplain)
        </dd>
        <dt class="col-sm-2">
        @Html.DisplayNameFor(healthConditionItem => healthCondition.DegreeOfHealthProblem)
        </dt>
        <dd class="col-sm-10">
        @Html.DisplayFor(healthConditionItem => healthCondition.DegreeOfHealthProblem)
        </dd>
        <dt class="col-sm-2">
        @Html.DisplayNameFor(healthConditionItem => healthCondition.WhenStarted)
        </dt>
        <dd class="col-sm-10">
        @Html.DisplayFor(healthConditionItem => healthCondition.WhenStarted)
        </dd>

        </dl>
        </div>
        }
        </div> 

</div>  *@
<div>
    <a asp-action="Edit" asp-route-id="@Model?.MilitaryNo">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>

