@model IEnumerable<WordCount>;

@{
    ViewData["Title"] = "Create";
}

<div class="row">
    <div class="col-md">
        <canvas id="myBarChart"></canvas>

    </div>
    <div class="col-md">
        <canvas id="myDonutChart"></canvas>

    </div>

    <div class="col-md">
        <canvas id="myLineChart"></canvas>

    </div>

</div>



@section scripts{

    <script type="text/javascript">

        var rankcount = @Html.Raw(Json.Serialize(Model));

        console.log(JSON.stringify(rankcount));
        
        var words = rankcount.map(function (item) {

            return `${ item.word }`;
        });

        var counts = rankcount.map(function (item) {
            return `${item.count}`;
        });

        console.log(words);

        const ctx = document.getElementById('myBarChart');
        const ctxDonut = document.getElementById('myDonutChart');
        const ctxLine = document.getElementById('myLineChart');


        const data = {
            labels: words,
            datasets: [{
                label: '# of Ranks',
                data: counts,
                backgroundColor: [
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(255, 159, 64, 0.2)',
                    'rgba(255, 205, 86, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(201, 203, 207, 0.2)'
                ],
                borderColor: [
                    'rgb(255, 99, 132)',
                    'rgb(255, 159, 64)',
                    'rgb(255, 205, 86)',
                    'rgb(75, 192, 192)',
                    'rgb(54, 162, 235)',
                    'rgb(153, 102, 255)',
                    'rgb(201, 203, 207)'
                ],
                borderWidth: 1
            }]
        };

        new Chart(ctx, {
            type: 'bar',
            data: data,            
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });


        new Chart(ctxDonut, {
            type: 'doughnut',
            data: data,
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });

        new Chart(ctxLine, {
            type: 'line',
            data: data,
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    </script>

}